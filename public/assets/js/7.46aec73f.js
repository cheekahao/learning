(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{353:function(t,s,a){"use strict";a.r(s);var e=a(42),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"es6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es6"}},[t._v("#")]),t._v(" ES6")]),t._v(" "),a("h2",{attrs:{id:"块级作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#块级作用域"}},[t._v("#")]),t._v(" 块级作用域")]),t._v(" "),a("h3",{attrs:{id:"全局块作用域绑定"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全局块作用域绑定"}},[t._v("#")]),t._v(" 全局块作用域绑定")]),t._v(" "),a("p",[a("code",[t._v("var")]),t._v("被用于全局作用域时，会创建一个全局变量作为全局对象(浏览器"),a("code",[t._v("window")]),t._v("对象)的属性。")]),t._v(" "),a("p",[a("code",[t._v("let")]),t._v("或"),a("code",[t._v("const")]),t._v(", 会在全局作用域下创建一个新的绑定，但不会添加到全局对象的属性。")]),t._v(" "),a("h2",{attrs:{id:"扩展对象功能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#扩展对象功能"}},[t._v("#")]),t._v(" 扩展对象功能")]),t._v(" "),a("h3",{attrs:{id:"object-is"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#object-is"}},[t._v("#")]),t._v(" "),a("code",[t._v("Object.is")])]),t._v(" "),a("p",[a("code",[t._v("JavaScript")]),t._v("中比较两个值，全等运算符("),a("code",[t._v("===")]),t._v(")要比相等运算符("),a("code",[t._v("==")]),t._v(")更可信。但是"),a("code",[t._v("===")]),t._v("也不完全准确，"),a("code",[t._v("+0")]),t._v("和"),a("code",[t._v("-0")]),t._v("在"),a("code",[t._v("JavaScript")]),t._v("引擎中，被表示为两个完全不同的实体，但是"),a("code",[t._v("===")]),t._v("返回的是"),a("code",[t._v("true")]),t._v("，而"),a("code",[t._v("NaN === NaN")]),t._v("返回"),a("code",[t._v("false")]),t._v("。")]),t._v(" "),a("p",[a("code",[t._v("Object.is")]),t._v("用来弥补全等运算符的不准确运算：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("+0 == -0             // true\n+0 === -0            // true\nObject.is(+0, -0)    // false\n\nNaN == NaN           // false\nNaN === NaN          // false\nObject.is(NaN, NaN)    // true\n")])])]),a("h3",{attrs:{id:"自有属性枚举顺序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自有属性枚举顺序"}},[t._v("#")]),t._v(" 自有属性枚举顺序")]),t._v(" "),a("p",[a("code",[t._v("Object.getOwnPropertyNames")]),t._v("的枚举顺序：")]),t._v(" "),a("ol",[a("li",[t._v("所有数字键按升序排序")]),t._v(" "),a("li",[t._v("所有字符串建按照被加入对象的顺序排序")]),t._v(" "),a("li",[t._v("所有symbol建按照被加入对象的顺序排序")])]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("for-in")]),t._v("循环每个厂商的实现方式各不相同、"),a("code",[t._v("Object.keys")]),t._v("、"),a("code",[t._v("JSON.stringify")]),t._v("与"),a("code",[t._v("for-in")]),t._v("循环有相同的枚举顺序")])]),t._v(" "),a("h3",{attrs:{id:"对象原型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对象原型"}},[t._v("#")]),t._v(" 对象原型")]),t._v(" "),a("p",[a("code",[t._v("ES5")]),t._v("中，对象原型实例化之后是保持不变的，无论是通过构造函数还是"),a("code",[t._v("Object.create()")]),t._v("。"),a("code",[t._v("ES5")]),t._v("有"),a("code",[t._v("Object.getPrototypeOf()")]),t._v("方法获取对象原型，但无法在对象实例化之后修改。")]),t._v(" "),a("p",[t._v("在"),a("code",[t._v("ES6")]),t._v("中添加了"),a("code",[t._v("Object.setPrototypeOf()")]),t._v("，用以改变任意指定对象的原型。有两个形参"),a("code",[t._v("Object.setPrototypeOf(target, newProto)")]),t._v("：")]),t._v(" "),a("ul",[a("li",[t._v("被改变原型的对象")]),t._v(" "),a("li",[t._v("替代原型的对象")])]),t._v(" "),a("h3",{attrs:{id:"super关键字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#super关键字"}},[t._v("#")]),t._v(" "),a("code",[t._v("super")]),t._v("关键字")]),t._v(" "),a("p",[a("code",[t._v("super")]),t._v("总是指向对象的原型。")]),t._v(" "),a("p",[a("code",[t._v("ES6")]),t._v("正式将方法定义成一个函数，内部的"),a("code",[t._v("[[HomeObject]]")]),t._v("属性指向这个从属对象。这一点，对于"),a("code",[t._v("super")]),t._v("而言非常重要，都是通过"),a("code",[t._v("[[HomeObject]]")]),t._v("属性来找到其对应的原型。")]),t._v(" "),a("h2",{attrs:{id:"函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[t._v("#")]),t._v(" 函数")]),t._v(" "),a("h3",{attrs:{id:"箭头函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#箭头函数"}},[t._v("#")]),t._v(" 箭头函数")]),t._v(" "),a("p",[t._v("与传统的"),a("code",[t._v("JavaScript")]),t._v("函数的不同")]),t._v(" "),a("ul",[a("li",[t._v("没有this、super、arguments和new.target绑定。这些值由外围最近一层的非箭头函数决定")]),t._v(" "),a("li",[t._v("不能通过new关键字调用，箭头函数没有[[Construct]]方法")]),t._v(" "),a("li",[t._v("没有prototype原型")]),t._v(" "),a("li",[t._v("不可以改变this绑定")]),t._v(" "),a("li",[t._v("不支持arguments对象")]),t._v(" "),a("li",[t._v("不支持重复的命名参数")])]),t._v(" "),a("h2",{attrs:{id:"迭代器-iterator-和生成器-generator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#迭代器-iterator-和生成器-generator"}},[t._v("#")]),t._v(" 迭代器(Iterator)和生成器(Generator)")]),t._v(" "),a("h3",{attrs:{id:"迭代器和生成器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#迭代器和生成器"}},[t._v("#")]),t._v(" 迭代器和生成器")]),t._v(" "),a("p",[a("strong",[t._v("迭代器")]),t._v("是一种特殊的对象，具有为迭代过程设计的专有接口，都一个"),a("code",[t._v("next")]),t._v("方法，每次调用都返回一个结果对象。结果对象有两个属性：一个是"),a("code",[t._v("value")]),t._v("，表示下一个将要返回的值；另一个是布尔类型的done，当没有更多数据返回时返回"),a("code",[t._v("true")]),t._v("。迭代器会保存一个内部指针，用来指向当前集合中值的位置。")]),t._v(" "),a("p",[a("strong",[t._v("生成器")]),t._v("是一种返回迭代器的函数，通过"),a("code",[t._v("function")]),t._v("关键字后的星号("),a("code",[t._v("*")]),t._v(")来表示，函数中会用到关键字"),a("code",[t._v("yield")]),t._v("。")]),t._v(" "),a("p",[t._v("不能用箭头函数创建生成器，但是可以直接将生成器作为方法添加到对象用。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" o "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createIterator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("items")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" items"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" items"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("可以通过给迭代器的"),a("code",[t._v("next()")]),t._v("方法传递参数，这个参数的值会替代生成器内部上一条"),a("code",[t._v("yield")]),t._v("语句的返回值。")]),t._v(" "),a("p",[t._v("需要注意的是，第一次调用"),a("code",[t._v("next()")]),t._v("方法，无论传什么参数都无效。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createIterator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" first "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" second "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" first "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4 + 2")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" second "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 5 + 3")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" iterator "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createIterator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iterator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// {value: 1, done: false}")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iterator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// {value: 6, done: false} ")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iterator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// {value: 8, done: false} ")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iterator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// {value: undefined, done: true} ")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 抛出错误")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iterator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// {value: 1, done: false}")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iterator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// {value: 6, done: false} ")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iterator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("throw")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Boom'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 抛出错误")]),t._v("\n")])])]),a("p",[t._v("生成器内部可以通过"),a("code",[t._v("try-catch")]),t._v("来捕获错误")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createIterator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" first "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" second "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" first "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" \n    \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        second "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" first "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        second "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" second "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 5 + 3")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" iterator "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createIterator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 抛出错误")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iterator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// {value: 1, done: false}")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iterator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// {value: 6, done: false} ")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iterator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("throw")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Boom'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// {value: 9, done: false}  ")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iterator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// {value: undefined, done: true} ")]),t._v("\n")])])]),a("h3",{attrs:{id:"可迭代对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可迭代对象"}},[t._v("#")]),t._v(" 可迭代对象")]),t._v(" "),a("p",[t._v("可迭代对象具有"),a("code",[t._v("Symbol.inerator")]),t._v("属性，"),a("code",[t._v("Symbol.inerator")]),t._v("通过指定的函数，可以返回一个作用于附属对象的迭代器。在"),a("code",[t._v("ES6")]),t._v("中，所有的集合对象("),a("code",[t._v("Array/Set/Map")]),t._v(")和字符串都是可迭代对象。"),a("code",[t._v("for-of")]),t._v("循环需要用到可迭代对象的这些功能。")]),t._v(" "),a("p",[t._v("普通对象不是可迭代对象，不能用于"),a("code",[t._v("for-of")]),t._v("循环。")]),t._v(" "),a("p",[t._v("迭代器默认会为"),a("code",[t._v("Symbol.inerator")]),t._v("属性赋值，所用通过生成器创建的迭代器都是可迭代队形。")]),t._v(" "),a("p",[a("code",[t._v("for-of")]),t._v("循环没执行一次都会调用可迭代对象的"),a("code",[t._v("next()")]),t._v("方法，并将迭代器返回的结果对象的"),a("code",[t._v("value")]),t._v("属性储存在一个变量中，循环将持续执行这个过程直到返回队形的"),a("code",[t._v("done")]),t._v("属性为"),a("code",[t._v("true")])]),t._v(" "),a("h2",{attrs:{id:"内置迭代器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内置迭代器"}},[t._v("#")]),t._v(" 内置迭代器")]),t._v(" "),a("h3",{attrs:{id:"集合对象迭代器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集合对象迭代器"}},[t._v("#")]),t._v(" 集合对象迭代器")]),t._v(" "),a("p",[a("code",[t._v("ES6")]),t._v("中有3种集合对象：数组，"),a("code",[t._v("Map")]),t._v("和"),a("code",[t._v("Set")]),t._v("。都有以下三种迭代器：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("entries()")]),t._v("，返回一个所拥有的键值对的迭代器。数组的第一个元素为数字类型索引，"),a("code",[t._v("Set")]),t._v("的键和值都为值。")]),t._v(" "),a("li",[a("code",[t._v("values()")]),t._v("，返回一个包含集合中的所有值的迭代器")]),t._v(" "),a("li",[a("code",[t._v("keys()")]),t._v(", 返回一个包含集合中所有键的迭代器")])]),t._v(" "),a("p",[t._v("在"),a("code",[t._v("for-of")]),t._v("循环中，没有显示指定，则使用集合的默认迭代器。数组和"),a("code",[t._v("Set")]),t._v("集合的默认迭代器是"),a("code",[t._v("values()")]),t._v("方法，"),a("code",[t._v("Map")]),t._v("集合的默认迭代器是"),a("code",[t._v("entries()")]),t._v("方法")]),t._v(" "),a("h3",{attrs:{id:"字符串迭代器（问题未复现）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串迭代器（问题未复现）"}},[t._v("#")]),t._v(" 字符串迭代器（问题未复现）")]),t._v(" "),a("p",[a("code",[t._v("ES5")]),t._v("中是可以通过方括号访问字符串中的字符的，但是由于方括号操作的是编码单元而不是字符，无法正确访问双字节字符。而在"),a("code",[t._v("ES6")]),t._v("中通过字符串的默认迭代器解决了这个问题。")]),t._v(" "),a("h3",{attrs:{id:"nodelist迭代器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nodelist迭代器"}},[t._v("#")]),t._v(" "),a("code",[t._v("NodeList")]),t._v("迭代器")]),t._v(" "),a("p",[a("code",[t._v("DOM")]),t._v("标准中的"),a("code",[t._v("NodeList")]),t._v("是一个类数组对象。"),a("code",[t._v("ES6")]),t._v("添加了默认迭代器后，"),a("code",[t._v("DOM")]),t._v("标准(定义在HTML标准中)也拥有了与数组行为一致的迭代器。因此在"),a("code",[t._v("for-of")]),t._v("循环中，与数组表现一致。")]),t._v(" "),a("h3",{attrs:{id:"展开运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#展开运算符"}},[t._v("#")]),t._v(" 展开运算符")]),t._v(" "),a("p",[t._v("展开运算符"),a("code",[t._v("...")]),t._v("可以操作所有可迭代对象，从默认迭代器中读取所有值，然后按照返回顺序依次插入到数组中。")]),t._v(" "),a("h3",{attrs:{id:"委托生成器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#委托生成器"}},[t._v("#")]),t._v(" 委托生成器")]),t._v(" "),a("p",[t._v("需要将多个迭代器合为一个时，可以创建一个生成器，给"),a("code",[t._v("yield")]),t._v("语句添加一个星号，就可以将生成数据的过程委托给其他迭代器。")]),t._v(" "),a("p",[t._v("生成器委托可以进一步利用返回值来处理复杂任务")]),t._v(" "),a("h3",{attrs:{id:"类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类"}},[t._v("#")]),t._v(" 类")]),t._v(" "),a("p",[a("code",[t._v("ES6")]),t._v("的类是基于已有自定义类型声明的语法糖。但是类和自定义类型仍存在以下区别：")]),t._v(" "),a("ul",[a("li",[t._v("类声明与"),a("code",[t._v("let")]),t._v("声明类似不能被提升，正在执行声明语句之前，存在于临时死区中")]),t._v(" "),a("li",[t._v("类声明中所有代码都自动运行在严格模式下")]),t._v(" "),a("li",[t._v("类声明中，所有方法都是不可枚举的。而自定义类型中是可枚举的")]),t._v(" "),a("li",[t._v("类有一个名为"),a("code",[t._v("[[Construct]]")]),t._v("的内部方法，通过"),a("code",[t._v("new")]),t._v("关键字调用不含"),a("code",[t._v("[[Construct]]")]),t._v("的方法，会抛错")]),t._v(" "),a("li",[t._v("不使用"),a("code",[t._v("new")]),t._v("关键字调用类的构造函数会抛错")]),t._v(" "),a("li",[t._v("在类中修改类名会抛错")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name\n        \n        Foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bar"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//报错，类型内部不能修改类名")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Mike'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 报错，没有通过new关键字调用构造函数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" person "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Mike'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sayName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//报错，不能用new关键字调用类的方法")]),t._v("\n")])])]),a("h2",{attrs:{id:"代理和反射"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代理和反射"}},[t._v("#")]),t._v(" 代理和反射")]),t._v(" "),a("p",[t._v("代理(Proxy)是一种可以拦截并改变底层"),a("code",[t._v("JavaScript")]),t._v("引擎操作的包装器。")]),t._v(" "),a("blockquote",[a("p",[t._v("在"),a("code",[t._v("ES6")]),t._v("中数组被认为是奇异对象(exotic object)")])]),t._v(" "),a("p",[t._v("调用"),a("code",[t._v("new Proxy")]),t._v("可创建目标(target)对象的代理，他虚拟化了目标，二者看起来功能一致。")]),t._v(" "),a("p",[t._v("代理可以拦截"),a("code",[t._v("JavaScript")]),t._v("引擎内部目标的底层对象操作，会触发对应的陷阱函数")]),t._v(" "),a("p",[t._v("反射"),a("code",[t._v("API")]),t._v("以"),a("code",[t._v("Reflect")]),t._v("对象的形式出现，对象中方法的默认特性与相同的底层操作一直，代理可以覆写这些操作，每个代理陷阱都对应一个命名和参数相同的"),a("code",[t._v("Reflect")]),t._v("方法")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("代理陷阱")]),t._v(" "),a("th",[t._v("覆写的特性")]),t._v(" "),a("th",[t._v("默认特性")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("get")])]),t._v(" "),a("td",[t._v("读取一个属性值")]),t._v(" "),a("td",[a("code",[t._v("Reflect.get()")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("set")])]),t._v(" "),a("td",[t._v("写入一个属性值")]),t._v(" "),a("td",[a("code",[t._v("Reflect.set()")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("has")])]),t._v(" "),a("td",[a("code",[t._v("in")]),t._v("操作符")]),t._v(" "),a("td",[a("code",[t._v("Reflect.has()")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("deleteProperty")])]),t._v(" "),a("td",[a("code",[t._v("delete")]),t._v("操作符")]),t._v(" "),a("td",[a("code",[t._v("Reflect.deleteProperty()")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("getPrototypeOf")])]),t._v(" "),a("td",[a("code",[t._v("Object.getPrototypeOf()")])]),t._v(" "),a("td",[a("code",[t._v("Reflect.getPrototypeOf()")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("setPrototypeOf")])]),t._v(" "),a("td",[a("code",[t._v("Object.setPrototypeOf()")])]),t._v(" "),a("td",[a("code",[t._v("Reflect.setPrototypeOf()")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("isExtensible")])]),t._v(" "),a("td",[a("code",[t._v("Object.isExtensible()")])]),t._v(" "),a("td",[a("code",[t._v("Reflect.isExtensible()")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("preventExtensions")])]),t._v(" "),a("td",[a("code",[t._v("Object.preventExtensions()")])]),t._v(" "),a("td",[a("code",[t._v("Reflect.preventExtensions()")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("getOwnPropertyDescriptor")])]),t._v(" "),a("td",[a("code",[t._v("Object.getOwnPropertyDescriptor()")])]),t._v(" "),a("td",[a("code",[t._v("Reflect.getOwnPropertyDescriptor()")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("defineProperty")])]),t._v(" "),a("td",[a("code",[t._v("Object.defineProperty()")])]),t._v(" "),a("td",[a("code",[t._v("Reflect.defineProperty()")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("ownKeys")])]),t._v(" "),a("td",[a("code",[t._v("Object.keys()")]),t._v("、"),a("code",[t._v("Object.getOwnPropertyNames()")]),t._v("和、"),a("code",[t._v("Object.getOwnPropertySymbols()")])]),t._v(" "),a("td",[a("code",[t._v("Reflect.ownKeys()")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("apply")])]),t._v(" "),a("td",[t._v("调用一个函数")]),t._v(" "),a("td",[a("code",[t._v("Reflect.apply()")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("construct")])]),t._v(" "),a("td",[t._v("用"),a("code",[t._v("new")]),t._v("调用一个函数")]),t._v(" "),a("td",[a("code",[t._v("Reflect.construct()")])])])])]),t._v(" "),a("h3",{attrs:{id:"代理的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代理的使用"}},[t._v("#")]),t._v(" 代理的使用")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" target "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" proxy "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Proxy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * \n     * @param {Object}          trapTarget  接受属性的被代理的目标对象，本例中的target\n     * @param {String, Symbol}  key         要写入的属性键值\n     * @param {*}               value       要写入的属性键值\n     * @param {Object}          receiver    代理对象，本例中的proxy\n     */")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("trapTarget"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" receiver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("trapTarget "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" receiver "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" proxy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true 'name' 'proxy' true")]),t._v("\n        \n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Reflect"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("trapTarget"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" receiver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nproxy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"proxy"')]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("proxy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "proxy"')]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "proxy"')]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);